import{_ as a,D as o,o as n,c as p,G as t,V as l}from"./chunks/framework.ab6d8354.js";const g=JSON.parse('{"title":"Typora+PicGo+Github无缝上传图片","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/common-skill/2023-05-23-typora-picbed.md","filePath":"blogs/common-skill/2023-05-23-typora-picbed.md","lastUpdated":1685338559000}'),e={name:"blogs/common-skill/2023-05-23-typora-picbed.md"},r=l(`<h1 id="typora-picgo-github无缝上传图片" tabindex="-1">Typora+PicGo+Github无缝上传图片 <a class="header-anchor" href="#typora-picgo-github无缝上传图片" aria-label="Permalink to &quot;Typora+PicGo+Github无缝上传图片&quot;">​</a></h1><h2 id="typora" tabindex="-1">Typora <a class="header-anchor" href="#typora" aria-label="Permalink to &quot;Typora&quot;">​</a></h2><p>typora是一个markdown编辑器，特别好用，免费试用15天之后爱不释手，于是我付费了，本站博客都是用这个编辑器写的（我目前就只激活了1台设备，还可以激活2台，想要白嫖的可以找我）。<a href="https://typoraio.cn/" target="_blank" rel="noreferrer">官网地址</a></p><h2 id="picgo" tabindex="-1">PicGo <a class="header-anchor" href="#picgo" aria-label="Permalink to &quot;PicGo&quot;">​</a></h2><p>picgo是一个图片上传插件，可以把图片上传到各个平台，包括腾讯云COS、阿里云OOS、SM.MS、GitHub等等，由于腾讯和阿里都是要付费的，SM.MS太不稳定，上传5张就能失败3张，果断选择GitHub，稳定性尚可，还免费。</p><h2 id="开始操作" tabindex="-1">开始操作 <a class="header-anchor" href="#开始操作" aria-label="Permalink to &quot;开始操作&quot;">​</a></h2><h3 id="github账号" tabindex="-1">github账号 <a class="header-anchor" href="#github账号" aria-label="Permalink to &quot;github账号&quot;">​</a></h3><p>第一步，注册一个github账号，<a href="https://github.com/" target="_blank" rel="noreferrer">github</a></p><h3 id="新建仓库" tabindex="-1">新建仓库 <a class="header-anchor" href="#新建仓库" aria-label="Permalink to &quot;新建仓库&quot;">​</a></h3><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic1.png" alt="image-20230523145323661"></p><p>填写项目名、勾选public，Create repository</p><h3 id="下载picgo" tabindex="-1">下载PicGo <a class="header-anchor" href="#下载picgo" aria-label="Permalink to &quot;下载PicGo&quot;">​</a></h3><p><a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noreferrer">PicGo官网</a>点击免费下载，选择自己的电脑平台下载</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic2.png" alt="image-20230523145835885"></p><h3 id="图床设置" tabindex="-1">图床设置 <a class="header-anchor" href="#图床设置" aria-label="Permalink to &quot;图床设置&quot;">​</a></h3><p>设置图床，选择Github，编辑配置</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic3.png" alt="image-20230523150102323"></p><p>这里需要我们填写一些信息，就是刚才我们github的仓库路径、分支、目录以及token</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic4.png" alt="image-20230523150224418"></p><p>注意，这里的Token不是我们的SSH Key，是需要在github里面去生成的，下面会讲</p><h3 id="生成github-token" tabindex="-1">生成GitHub Token <a class="header-anchor" href="#生成github-token" aria-label="Permalink to &quot;生成GitHub Token&quot;">​</a></h3><p>点击Github右上角头像，选择Settings，进入我们的<a href="https://github.com/settings/profile" target="_blank" rel="noreferrer">Settings页面</a></p><p>页面滑到最下面有个 Developer settings 选项</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic6.png" alt="image-20230523150722977"></p><p>点进去之后选择Personal aceess tokens，下面有两个选项，<strong>Fine-grained tokens</strong>和<strong>Tokens(classic)</strong>，有什么区别呢，简单来说，前者可以提供更细粒度的权限控制，涵盖仓库级、workflow、actions等一类的读写权限，github官方推荐是使用这个，更加安全。所以我们选择<strong>Fine-grained tokens</strong>，点击Generate new token</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic7.png" alt="image-20230523151313792"></p><p>生成token需要我们填写一些信息，token名、有效期（最多可以选择一年）、仓库权限</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic8.png" alt="image-20230523151743681"></p><p>这里的<strong>Repository permissions</strong>下建议全给最高权限，即 Read and Write，点击下拉菜单即可给每项操作设置权限，下面的<strong>Account permissions</strong>不用管，直接点击Generate token 生成。</p><p>注意：生成完以后会显示你的token，直接复制到PicGo的token中。</p><h3 id="集成到typora" tabindex="-1">集成到Typora <a class="header-anchor" href="#集成到typora" aria-label="Permalink to &quot;集成到Typora&quot;">​</a></h3><p>到这里你已经可以使用PicGo去上传图片了，但是我们平常一般都是在Typora中编辑文档，要上传图片的时候去PicGo里去上传，完成以后再复制到Typora中，来回切换还是显得有点麻烦。我们可以把PicGo集成到Typora中。</p><p>打开Typora，左上角 文件 -&gt; 偏好设置 -&gt; 图像</p><p>上传服务选择PicGo(app),路径输入PicGo的安装路径，比如我是安装在C盘的，路径是C:\\Users\\xxx\\AppData\\Local\\Programs\\PicGo\\PicGo.exe</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic10.png" alt="image-20230523152827216"></p><p>完成之后我们可以点击<strong>验证图片上传选项</strong>测试一下，typora会给我们的github上传几张图片用来测试，显示上传成功即可。</p><h3 id="完成" tabindex="-1">完成 <a class="header-anchor" href="#完成" aria-label="Permalink to &quot;完成&quot;">​</a></h3><p>这样我们就可以在Typora里上传图片啦，不管是剪切板的截图还是本地图片，复制到Typora里面之后，编辑的时候鼠标右键选中图片-上传图片即可</p><h2 id="一些问题" tabindex="-1">一些问题 <a class="header-anchor" href="#一些问题" aria-label="Permalink to &quot;一些问题&quot;">​</a></h2><p>如果图片上传失败，我们可以在PicGo 的log文件里面查看日志，文件最底下是最新的日志</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic11.png" alt="image-20230523153344638"></p><h3 id="statuscode-422" tabindex="-1">statusCode: 422 <a class="header-anchor" href="#statuscode-422" aria-label="Permalink to &quot;statusCode: 422&quot;">​</a></h3><p>我们可能会遇到上传失败，日志里显示这样的错误</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2023-05-23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">02</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">56</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">PicGo ERROR</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PUT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://api.github.com/repos/HanochMa/PictureBed/contents/blogs/typora-pic3.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">statusCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">422</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Request failed with status code 422</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">stack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">response</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">422</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">statusCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">422</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Invalid request.</span><span style="color:#A6ACCD;">\\n\\n\\&quot;</span><span style="color:#C3E88D;">sha</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> wasn&#39;t supplied.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">documentation_url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://docs.github.com/rest/reference/repos#create-or-update-file-contents</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这是因为github不允许上传相同文件名的图片，即使你的文件是不同的，我们可以在PicGo里面把<strong>上传前重命名</strong>和<strong>时间戳重命名</strong>这两个选项打开，之后上传的时候会让我们重命名文件，重命名完确定就可以上传啦。</p><p><img src="https://raw.githubusercontent.com/HanochMa/PictureBed/main/blogs/typora-pic12.png" alt="image-20230523153654671"></p><h3 id="socket-hang-up" tabindex="-1">socket hang up <a class="header-anchor" href="#socket-hang-up" aria-label="Permalink to &quot;socket hang up&quot;">​</a></h3><p>有时候网络波动，会有这样的错误,重新上传一次即可</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2023-05-23</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">08</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">44</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">PicGo ERROR</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PUT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://api.github.com/repos/HanochMa/PictureBed/contents/blogs/typora-pic5.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">statusCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">socket hang up</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">stack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error: socket hang up</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at connResetException (node:internal/errors:691:14)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at TLSSocket.socketOnEnd (node:_http_client:471:23)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at TLSSocket.emit (node:events:406:35)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at endReadableNT (node:internal/streams/readable:1343:12)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at processTicksAndRejections (node:internal/process/task_queues:83:21)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">response</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">statusCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="如何在上传前对图片进行压缩" tabindex="-1">如何在上传前对图片进行压缩 <a class="header-anchor" href="#如何在上传前对图片进行压缩" aria-label="Permalink to &quot;如何在上传前对图片进行压缩&quot;">​</a></h3><p>回到PicGo，进入左侧面板<strong>插件设置</strong>，我们下载社区里的插件<code>tinypng</code>使用tinypng对图片进行压缩后上传，下载完成后，点击<strong>插件右下角配置 -&gt; 配置plugin</strong>，由于我们需要使用tinypng的api对图片进行压缩，需要在<a href="https://tinypng.com/developers" target="_blank" rel="noreferrer">tinypng官网</a>注册开发者账号获取个人的API key（每月前500次调用免费），将我们的API key配置到插件面板中，启用插件即可。</p>`,51);function c(D,i,y,F,C,u){const s=o("git-talk");return n(),p("div",null,[r,t(s)])}const A=a(e,[["render",c]]);export{g as __pageData,A as default};
